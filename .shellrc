# Configure PATH
export PATH=$HOME/.dotfiles/bin:$PATH
export PATH=$HOME/.dotfiles/utils:$PATH
export PATH=$HOME/.local/bin:$PATH
export PATH=$HOME/.cargo/bin:$PATH

alias_if_not_exists() {
    # Registers an alias if $ALIAS_NAME is not already an existing command
    ALIAS_NAME=$1
    shift 1

    if ! command -v $ALIAS_NAME > /dev/null
    then
        alias $ALIAS_NAME="$@"
    fi
}

register_wsl_alias_for_exe() {
    # Registers a WSL compatible alias to a .exe path if $ALIAS_NAME is not already an existing command
    ALIAS_NAME=$1
    shift 1
    EXE_PATH=$1
    alias $ALIAS_NAME="call_exe_with_file_argument_wsl \"$EXE_PATH\""
}

register_wsl_alias_for_exe firefox '/mnt/c/Program Files/Mozilla Firefox/firefox.exe'
register_wsl_alias_for_exe chrome 'C:\Program Files\Google\Chrome\Application\chrome.exe'
register_wsl_alias_for_exe edge 'C:\Program Files (x86)\Microsoft\Edge\Application\msedge.exe'
register_wsl_alias_for_exe paintdotnet 'C:\Program Files\paint.net\paintdotnet.exe'
register_wsl_alias_for_exe adobe 'C:\Program Files\Adobe\Acrobat DC\Acrobat\Acrobat.exe'
register_wsl_alias_for_exe gimp 'C:\Program Files\GIMP 2\bin\gimp-2.10.exe'
register_wsl_alias_for_exe notepad '/mnt/c/Windows/notepad.exe'

alias eog='paintdotnet'

# Alias c to "code ." if vscode is installed
if command -v code > /dev/null
then
    c() {
        if [ "$#" -eq 0 ]
        then
            code .
        else
            code $@
        fi
    }
fi

alias serial="$HOME/.dotfiles/pyserial_interactive_connection.py"
alias restart_wsl_usb_attach_loop="$HOME/.dotfiles/restart_wsl_usb_attach_loop.sh"
alias wsl-sudo="$HOME/.dotfiles/wsl-sudo/wsl-sudo.py"
alias wudo=wsl-sudo
alias e=exa
alias f=firefox
alias browsh="docker run -it browsh/browsh"

# Source local shellrc last so that it takes priority
if [ -f $HOME/.local.shellrc ]
then
    source $HOME/.local.shellrc
fi
